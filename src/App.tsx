// src/App.tsx

import React, { useState, useEffect } from 'react'; // <-- ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect
import { ThemeProvider, createTheme, CssBaseline, Container } from '@mui/material';
import Header from './components/Header';
import Navigation from './components/Navigation';
import Register from './components/auth/Register';
import Login from './components/auth/Login'; // <-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

const theme = createTheme({
  typography: {
    fontFamily: "'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
  },
  palette: {
    background: {
      default: '#f8f9fa'
    }
  }
});

function App() {
  const [currentPage, setCurrentPage] = useState('dashboard');
  const [isLoggedIn, setIsLoggedIn] = useState(false); // <-- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ Login
  const [showAuthForm, setShowAuthForm] = useState<'login' | 'register' | null>('login'); // <-- ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ü‡∏≠‡∏£‡πå‡∏° Login/Register

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ Login ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Component ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  useEffect(() => {
    const token = localStorage.getItem('authToken');
    if (token) {
      setIsLoggedIn(true);
      setShowAuthForm(null); // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ token ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
    } else {
        setShowAuthForm('login'); // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ token ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏° Login
        setCurrentPage('dashboard'); // ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 'login' ‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞ ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏û‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ UX ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô
    }
  }, []);

  const handlePageChange = (page: string) => {
    setCurrentPage(page);
    console.log('‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤:', page);
  };

  const handleLoginSuccess = () => {
    setIsLoggedIn(true);
    setShowAuthForm(null); // ‡∏ã‡πà‡∏≠‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏° Login/Register
    setCurrentPage('dashboard'); // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Dashboard ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
  };

  const handleSwitchToRegister = () => {
    setShowAuthForm('register');
  };

  const handleSwitchToLogin = () => {
    setShowAuthForm('login');
  };

  const renderCurrentPage = () => {
    if (showAuthForm === 'login') {
        return <Login onLoginSuccess={handleLoginSuccess} onSwitchToRegister={handleSwitchToRegister} />;
    }
    if (showAuthForm === 'register') {
        return <Register />; // Register Component ‡πÑ‡∏°‡πà‡∏°‡∏µ onLoginSuccess ‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
    }

    // ‡∏ñ‡πâ‡∏≤ Login ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏´‡∏ô‡πâ‡∏≤ Login/Register ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡∏≤‡∏° currentPage
    switch (currentPage) {
      case 'dashboard':
        return (
          <div>
            <h2 style={{ color: '#1a1a1a', fontWeight: '600', marginBottom: '16px' }}>
              üìä Dashboard - ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </h2>
            <p style={{ color: '#666666', fontSize: '1rem' }}>
              ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏†‡∏≤‡∏†‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö CBAM
            </p>
            {/* ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà */}
          </div>
        );
      case 'form':
        return (
          <div>
            <h2 style={{ color: '#1a1a1a', fontWeight: '600', marginBottom: '16px' }}>
              üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CBAM (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà Login ‡πÅ‡∏•‡πâ‡∏ß)
            </h2>
            <p style={{ color: '#666666', fontSize: '1rem' }}>
              ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Carbon Footprint
            </p>
            {/* ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Component ‡∏Ç‡∏≠‡∏á Form ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÜ */}
          </div>
        );
      case 'reports':
        return (
          <div>
            <h2 style={{ color: '#1a1a1a', fontWeight: '600', marginBottom: '16px' }}>
              üìà ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ
            </h2>
            <p style={{ color: '#666666', fontSize: '1rem' }}>
              ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡πä‡∏≤‡∏ã‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡∏Å‡∏£‡∏∞‡∏à‡∏Å
            </p>
          </div>
        );
      case 'status':
        return (
          <div>
            <h2 style={{ color: '#1a1a1a', fontWeight: '600', marginBottom: '16px' }}>
              üìã ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
            </h2>
            <p style={{ color: '#666666', fontSize: '1rem' }}>
              ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
            </p>
          </div>
        );
      case 'admin':
        return (
          <div>
            <h2 style={{ color: '#1a1a1a', fontWeight: '600', marginBottom: '16px' }}>
              üîß ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏£‡∏∞‡∏ö‡∏ö (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö)
            </h2>
            <p style={{ color: '#666666', fontSize: '1rem' }}>
              ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö TGO
            </p>
          </div>
        );
      default:
        return <div>‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö</div>;
    }
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{
        backgroundColor: '#f8f9fa',
        minHeight: '100vh',
        padding: '24px'
      }}>
        <Container maxWidth="xl">
          {/* Header ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï */}
          <Header 
            companyName="‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡πÄ‡∏≠‡∏ö‡∏µ‡∏ã‡∏µ ‡∏à‡∏≥‡∏Å‡∏±‡∏î"
            userStatus={isLoggedIn ? "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß" : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"} // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£ Login
          />

          {/* Navigation ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ Login ‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡∏ã‡πà‡∏≠‡∏ô/‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏Å‡πá‡πÑ‡∏î‡πâ */}
          {isLoggedIn && (
            <Navigation onPageChange={handlePageChange} />
          )}

          <div style={{
            background: 'white',
            borderRadius: '8px',
            padding: '32px',
            minHeight: '400px',
            boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
          }}>
            {renderCurrentPage()}
          </div>
        </Container>
      </div>
    </ThemeProvider>
  );
}

export default App;